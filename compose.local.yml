---
name: transaction-app

x-common-volumes-project: &project-volumes
    - ./app:/var/www/html/app
    - ./bootstrap:/var/www/html/bootstrap
    - ./config:/var/www/html/config
    - ./database:/var/www/html/database
    - ./public:/var/www/html/public
    - ./resources:/var/www/html/resources
    - ./routes:/var/www/html/routes
    - ./storage:/var/www/html/storage
    - ./tests:/var/www/html/tests
    - ./.env:/var/www/html/.env
    - ./phpunit.xml:/var/www/html/phpunit.xml
    - ./composer.json:/var/www/html/composer.json


networks:
  app-network:
    driver: bridge

volumes:
  db_data: { }
  cache_data: { }

services:

  nginx:
    image: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_NAME}/nginx:${CI_COMMIT_SHORT_SHA}
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    volumes:
      - ./public:/var/www/html/public
    networks:
      - app-network
    depends_on:
      app:
        condition: service_healthy
    ports:
      - $PORT:8080
    healthcheck:
      test: [ 'CMD-SHELL', 'nc -vz 127.0.0.1 8080 && echo "true"  || exit 1' ]
      interval: 30s
      retries: 3
      timeout: 20s
      start_period: 60s

  app:
    user: "501"
    image: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_NAME}/app:${CI_COMMIT_SHORT_SHA}
    container_name: ${APP_NAME}-app
    restart: unless-stopped
    volumes: *project-volumes
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
    expose:
      - 9000
    healthcheck:
      test: [ "CMD-SHELL", "php-healthcheck || exit 1" ]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 20s

  migrate:
    image: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_NAME}/app:${CI_COMMIT_SHORT_SHA}
    restart: "no"
    command: php /var/www/html/artisan migrate --force
    volumes: *project-volumes
    networks:
      - app-network
    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-qwerty}
    volumes:
      - cache_data:/data
    networks:
      - app-network
    expose:
      - 6379
    healthcheck:
      test: [ 'CMD-SHELL', 'redis-cli -a ${REDIS_PASSWORD:-qwerty} ping | grep PONG || exit 1' ]
      interval: 30s
      retries: 3
      timeout: 20s
      start_period: 20s

  db:
    image: postgres:17.1-alpine3.20
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_DATABASE:-db}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
      interval: 60s
      retries: 3
      start_period: 10s
      timeout: 10s
  
  pgadmin4:
    image: elestio/pgadmin:${PGADMIN_VERSION_TAG:-latest}
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL:-admin@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "8088:8080"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - app-network
